#!/usr/bin/env python

PACKAGE = "lidar_object_detector"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("traffic_minPoints", int_t, 0, "traffic_minPoints", 10, 1, 100)
gen.add("traffic_epsilon", double_t, 0, "traffic_epsilon", 0.4, 0, 20)
gen.add("traffic_minClusterSize", int_t, 0, "traffic_minClusterSize", 10, 1, 100)
gen.add("traffic_maxClusterSize", double_t, 0, "traffic_maxClusterSize", 1000, 1, 10000)

gen.add("traffic_xMinROI", double_t, 0, "traffic_xMinROI", -0.3, -200, 10)
gen.add("traffic_xMaxROI", double_t, 0, "traffic_xMaxROI", 6.25, -10, 200)
gen.add("traffic_yMinROI", double_t, 0, "traffic_yMinROI", -5.0, -200, 10)
gen.add("traffic_yMaxROI", double_t, 0, "traffic_yMaxROI", 5.0, -10, 200)
gen.add("traffic_zMinROI", double_t, 0, "traffic_zMinROI", -0.5, -2, 0)
gen.add("traffic_zMaxROI", double_t, 0, "traffic_zMaxROI", 1.0, -2, 20)

gen.add("traffic_xMinBoundingBox", double_t, 0, "traffic_xMinBoundingBox", 0.05, 0, 1000);
gen.add("traffic_xMaxBoundingBox", double_t, 0, "traffic_xMaxBoundingBox", 0.5, 0, 3);
gen.add("traffic_yMinBoundingBox", double_t, 0, "traffic_yMinBoundingBox", 0.05, 0, 10);
gen.add("traffic_yMaxBoundingBox", double_t, 0, "traffic_yMaxBoundingBox", 0.6, 0, 3);
gen.add("traffic_zMinBoundingBox", double_t, 0, "traffic_zMinBoundingBox", 0.05, 0, 0.1);
gen.add("traffic_zMaxBoundingBox", double_t, 0, "traffic_zMaxBoundingBox", 0.85, 0, 3);

exit(gen.generate(PACKAGE, "traffic_cone", "traffic_hyper_parameter"))
